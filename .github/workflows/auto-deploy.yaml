name: Auto Deploy on AWS of the clean_ prd_ecomm infra

#event
on:
  push:
    branches:
      - 'main'
    paths:
      - '**'

jobs:
  validate-job:
    runs-on: ubuntu-latest
    name: "All steps for validating my tf infra" #Take the repo content and put in the variable $GITHUB_WORKSPACE so my workflow can access it

    env:
      GIT_SHA: ${{github.sha}}


    steps:

      - name: Take the repo local content a make it visible to Workflow
        uses: actions/checkout@v4


      # This is order-service code mangement automation
      - name: Set up Javascript Environment
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Zip order-service-lambda .js files
        run: |
            zip -r orders.zip orders/
            aws s3 cp orders.zip s3://ttt-my-terraform-state/backend-services/order-service-${{env.GIT_SHA}}.zip

      - name: Create and Populate tfvars file with the order-service s3 key
        run: |
            echo "js_files_var = "\backend-services/order-service-${{env.GIT_SHA}}.zip"" > terraform.tfvars
            


      - name: Set Up Python Environment
        uses: actions/setup-python@v5
        with: 
          python-version: '3.13'

      - name: Install Boto3
        run: pip install -r downstream-lambda/requirements.txt -t downstream-lambda/

      - name: Zip downstream-lambda .py file
        run: |
            zip downstream-lambda.zip downstream-lambda/ 
            aws s3 cp downstream-lambda.zip s3://ttt-my-terraform-state/downstream-services/publish-data-${{env.GIT_SHA}}.zip

      - name: Create and populate the tfvars file with the publish-data s3 key
        run: |
            echo "py_files_var = "\downstream-services/publish-data-${{env.GIT_SHA}}.zip"" >> terraform.tfvars  

          




      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-central-1

      - name: Installing Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.1"

      # Deploying Terraform
      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Plan # passing the terraform.tfvrs file created with the bash script
        run: terraform plan -var-file="terraform.tfvars" -out="tfplan"

      - name: Terraform Apply 
        run: terraform apply "tfplan"


    



